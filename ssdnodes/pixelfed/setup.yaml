- name: Prepare enviornment
  hosts: mws.rocks
  become: yes
  vars_prompt:
    - name: db_password
      prompt: Database password
  tasks:
    - name: Install dependencies
      community.general.pacman:
        name:
          - php
          - php-intl
          - redis
          - php-fpm
          - php-gd
          - php-imagick
          - php-redis
          - php-pgsql
          - jpegoptim
          - optipng
          - pngquant
          - imagemagick
          - ffmpeg
          - composer
        state: present
        reason: dependency

    - name: Enable PHP extensions
      ansible.builtin.copy:
        src: php.ini
        dest: "/etc/php/conf.d/pixelfed.ini"
    - name: Enable PHP extensions
      ansible.builtin.copy:
        src: php-igbinary.ini
        dest: "/etc/php/conf.d/igbinary.ini"
    - name: Enable PHP extensions
      ansible.builtin.copy:
        src: php-imagick.ini
        dest: "/etc/php/conf.d/imagick.ini"
    - name: Enable PHP extensions
      ansible.builtin.copy:
        src: php-redis.ini
        dest: "/etc/php/conf.d/redis.ini"

    - name: Create PHP-FPM pool
      ansible.builtin.copy:
        src: php-fpm-pixelfed.conf
        dest: /etc/php/php-fpm.d/pixelfed.conf

    - name: Copy Redis config
      ansible.builtin.copy:
        src: redis.conf
        dest: /etc/redis/redis.conf

    - name: Make sure redis is running
      ansible.builtin.systemd:
        state: restarted
        name: redis

    - name: Make sure user definition dir exists
      ansible.builtin.file:
        path: /etc/sysusers.d
        state: directory

    - name: Copy user definition
      ansible.builtin.copy:
        src: pixelfed.sysusers
        dest: /etc/sysusers.d/pixelfed.conf

    - name: Create user
      ansible.builtin.command: systemd-sysusers

    - name: Make repo safe
      ansible.builtin.command: "git config --global --add safe.directory /srv/http/pixelfed"

    - name: Clone repo
      ansible.builtin.git:
        repo: https://github.com/pixelfed/pixelfed.git
        dest: /srv/http/pixelfed
        force: true

    - name: Copy env file
      ansible.builtin.template:
        dest: /srv/http/pixelfed/.env
        src: env
        mode: 0600

    - name: Edit database config PHP
      ansible.posix.patch:
        dest: /srv/http/pixelfed/config/database.php
        src: database.php.patch

    - name: Set owner
      ansible.builtin.file:
        path: /srv/http/pixelfed
        owner: pixelfed
        group: pixelfed
        recurse: true

    - name: Ensure DB user exist
      become_user: postgres
      community.postgresql.postgresql_user:
        name: pixelfed
        password: "{{ db_password }}"

    - name: Ensure DB exist
      become_user: postgres
      community.postgresql.postgresql_db:
        name: pixelfed
        owner: pixelfed

- name: Prepare enviornment as sys user
  hosts: mws.rocks
  become: yes
  become_user: pixelfed
  tasks:
    - name: Composer update
      ansible.builtin.command:
        cmd: "composer update"
        chdir: /srv/http/pixelfed

    - name: Composer install
      ansible.builtin.command:
        cmd: "composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader"
        chdir: /srv/http/pixelfed

    - name: Generate key
      ansible.builtin.command:
        cmd: "php artisan key:generate"
        chdir: /srv/http/pixelfed

    - name: Other PHP commands
      ansible.builtin.shell:
        cmd: "php artisan storage:link && php artisan horizon:install && php artisan horizon:publish && php artisan migrate --force && php artisan import:cities"
        chdir: /srv/http/pixelfed
